import os
import sys
import asyncio
import aiohttp
import datetime
from telethon import TelegramClient
from telethon.sessions import StringSession
from telethon.tl.functions.payments import GetStarGiftsRequest

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
api_id = int(os.getenv("GIFT_API_ID"))
api_hash = os.getenv("GIFT_API_HASH")
GIFT_BOT_TOKEN = os.getenv("GIFT_BOT_TOKEN")

session_dir = "/app/data/files212/GIFT"
session_file = os.path.join(session_dir, "session.txt")
CHECK_INTERVAL = 3  # —Å–µ–∫—É–Ω–¥–∞

YOUR_TELEGRAM_USER_IDS = [5236886477, 1463991582]
BOT_API_URL = f"https://api.telegram.org/bot{GIFT_BOT_TOKEN}/sendMessage"

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–æ –≤—ã–≤–æ–¥–∞ ---
def get_log_file_path():
    timestamp = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
    return os.path.join(session_dir, f"log_{timestamp}.txt")

class TeeStream:
    def __init__(self, *streams):
        self.streams = streams
    def write(self, data):
        for s in self.streams:
            try:
                s.write(data)
                s.flush()
            except Exception:
                pass
    def flush(self):
        for s in self.streams:
            try:
                s.flush()
            except Exception:
                pass

if not os.path.exists(session_dir):
    os.makedirs(session_dir, exist_ok=True)

log_file_path = get_log_file_path()
log_file = open(log_file_path, "a", encoding="utf-8")
sys.stdout = TeeStream(sys.stdout, log_file)
sys.stderr = TeeStream(sys.stderr, log_file)
print(f"üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª: {log_file_path}")

async def notify_user(message):
    print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...")
    try:
        async with aiohttp.ClientSession() as session:
            for user_id in YOUR_TELEGRAM_USER_IDS:
                payload = {
                    "chat_id": user_id,
                    "text": message
                }
                async with session.post(BOT_API_URL, data=payload) as resp:
                    if resp.status == 200:
                        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {user_id}")
                    else:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user_id}, –∫–æ–¥: {resp.status}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", e)

if os.path.exists(session_file):
    print("üìÇ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º...")
    with open(session_file, "r") as f:
        session_str = f.read().strip()
    client = TelegramClient(StringSession(session_str), api_id, api_hash)
else:
    print("üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é...")
    client = TelegramClient(StringSession(), api_id, api_hash)

async def get_limited_gifts(client):
    print("üîé –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤...")
    try:
        result = await client(GetStarGiftsRequest(hash=0))
        gifts = []
        for gift in getattr(result, "gifts", []):
            if getattr(gift, "limited", False) and not getattr(gift, "sold_out", False):
                remains = getattr(gift, "availability_remains", 0)
                title = getattr(gift, "title", None) or getattr(gift, "alt", None) or f"ID: {gift.id}"
                gifts.append({
                    "id": gift.id,
                    "title": title,
                    "stars": getattr(gift, "stars", 0),
                    "remains": remains,
                })
        print(f"üéÅ –ù–∞–π–¥–µ–Ω–æ {len(gifts)} –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤.")
        return sorted(gifts, key=lambda g: -g["stars"])
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤:", e)
        return []

async def main():
    if not os.path.exists(session_file):
        print("üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏...")
        await client.start()
        with open(session_file, "w") as f:
            f.write(client.session.save())
        print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
    else:
        print("üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏...")
        await client.start()
        print("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")

    message = "–ù–û–í–´–ï –ü–û–î–ê–†–ö–òüéÅüéÅüéÅ –ê–ê–ê–ê–ê –°–†–û–ß–ù–ûüéÅ‚ö†Ô∏è –ê–ê–ê–ê–ê–ê–ê–ê–ê ‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è–ö–ê–ü–ï–¶ –î–£–û–õ–ò–ù–ì–û –ê–ê–ê–ê–ê üéÅüéÅüéÅüéÅüéÅ–ü–û–î–ê–†–ö–ò –ü–û–î–ê–†–ö–ò‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è‚ö†"

    print("üîÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    gifts_were = False
    while True:
        try:
            gifts = await get_limited_gifts(client)
            has_gifts = bool(gifts)
            if has_gifts and not gifts_were:
                print("üì£ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏!")

                # üîî –†–∞—Å—Å—ã–ª–∫–∞ 5 –º–≥–Ω–æ–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                for i in range(5):
                    print(f"üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ {i + 1}/5")
                    await notify_user(message)

                # ‚è±Ô∏è 15 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
                for i in range(15):
                    await asyncio.sleep(1)
                    print(f"‚è±Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π {i + 1}/15")
                    await notify_user(message)

            elif has_gifts:
                print("üü¢ –ü–æ–¥–∞—Ä–∫–∏ –µ—Å—Ç—å, –Ω–æ —É–∂–µ –±—ã–ª–∏ –∑–∞–º–µ—á–µ–Ω—ã —Ä–∞–Ω–µ–µ.")
            else:
                print("‚ö™ –õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ—Ç.")

            gifts_were = has_gifts
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:", e)
        await asyncio.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
    for var in ("GIFT_API_ID", "GIFT_API_HASH", "GIFT_BOT_TOKEN"):
        if not os.getenv(var):
            raise RuntimeError(f"–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: {var}")
    asyncio.run(main())