from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import ContextTypes

WELCOME_TEXT = (
    "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç ¬´–¢–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ãüñ®Ô∏è¬ª, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç —É—á–µ–±–Ω—ã–µ —Ä–∞–±–æ—Ç—ã (–∫—É—Ä—Å–æ–≤—ã–µ, –¥–æ–∫–ª–∞–¥—ã, —Ä–µ—Ñ–µ—Ä–∞—Ç—ã) –ø–æ –≤–∞—à–µ–π —Ç–µ–º–µ –∏ –ø—Ä–µ–¥–º–µ—Ç—É. –ó–∞–±—É–¥—å—Ç–µ –æ –±–µ—Å—Å–æ–Ω–Ω—ã—Ö –Ω–æ—á–∞—Ö ‚Äî –±–æ—Ç –≤—Å—ë —Å–¥–µ–ª–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ."
)

COST_TEXT = (
    "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å\n"
    "‚Äì 1 —Ä–∞–∑–¥–µ–ª = 20‚ÄØ‚ÇΩ (~1,5 —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–µ–∫—Å—Ç–∞).\n"
    "‚Äì –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ ‚Äî 1 —Ä–∞–∑–¥–µ–ª.\n"
    "‚Äì –ß–µ—Å—Ç–Ω–∞—è –æ–ø–ª–∞—Ç–∞: –º—ã —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞–µ–º —Å –ÆKassa, —ç—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—Ç–æ—Ç—É –ø–ª–∞—Ç–µ–∂–µ–π"
)

PAY_TEXT = (
    "üí≥ –û–ø–ª–∞—Ç–∞\n"
    "‚Äì –ß–µ—Ä–µ–∑ –°–ë–ü: –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏.\n"
    "‚Äì –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Äî –ø–æ—á—Ç–∏ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ.\n"
    "‚Äì –ü–æ–º–∏–º–æ –°–ë–ü –∏–º–µ—é—Ç—Å—è –∏ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã (SberPay, Mir Pay, –ÆMoney)"
)

REF_TEXT = (
    "üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n"
    "‚Äì –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ 20‚ÄØ% –æ—Ç –∫–∞–∂–¥–æ–≥–æ –∏—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.\n"
    "‚Äì –ë–æ–Ω—É—Å—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å.\n"
    "‚Äì –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ –±–∞–ª–∞–Ω—Å –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n"
    "‚Äì –°–≤–æ—é —Å—Å—ã–ª–∫—É –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞¬ª."
)

WELCOME_MENU = InlineKeyboardMarkup([
    [InlineKeyboardButton("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å?", callback_data="welcome_cost")],
])

COST_MENU = InlineKeyboardMarkup([
    [InlineKeyboardButton("üí≥ –ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å?", callback_data="welcome_pay")],
    [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="welcome_back_to_hello")],
])

PAY_MENU = InlineKeyboardMarkup([
    [InlineKeyboardButton("üë• –ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å?", callback_data="welcome_ref")],
    [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="welcome_cost")],
])

REF_MENU = InlineKeyboardMarkup([
    [InlineKeyboardButton("üü¢ –ù–∞—á–∞—Ç—å", callback_data="welcome_start")],
    [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="welcome_pay")],
])

# –ü–æ–¥–∫–ª—é—á–∏ —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –≥–ª–∞–≤–Ω–æ–º —Ñ–∞–π–ª–µ –∏ –≤—ã–∑–æ–≤–∏ –∏–∑ start() –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π!
async def show_welcome_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=WELCOME_TEXT,
        reply_markup=WELCOME_MENU
    )
    context.user_data["welcome_step"] = "hello"

async def welcome_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    step = query.data
    await query.answer()

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –º–µ–Ω—é
    if step == "welcome_cost":
        await query.edit_message_text(COST_TEXT, reply_markup=COST_MENU)
        context.user_data["welcome_step"] = "cost"
    elif step == "welcome_pay":
        await query.edit_message_text(PAY_TEXT, reply_markup=PAY_MENU)
        context.user_data["welcome_step"] = "pay"
    elif step == "welcome_ref":
        await query.edit_message_text(REF_TEXT, reply_markup=REF_MENU)
        context.user_data["welcome_step"] = "ref"
    elif step == "welcome_start":
        from bot import start  # –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        await start(update, context)  # –ü–µ—Ä–µ–∫–∏–¥—ã–≤–∞–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    elif step == "welcome_back_to_hello":
        await query.edit_message_text(WELCOME_TEXT, reply_markup=WELCOME_MENU)
        context.user_data["welcome_step"] = "hello"
    elif step == "welcome_cost":
        await query.edit_message_text(COST_TEXT, reply_markup=COST_MENU)
        context.user_data["welcome_step"] = "cost"
    elif step == "welcome_pay":
        await query.edit_message_text(PAY_TEXT, reply_markup=PAY_MENU)
        context.user_data["welcome_step"] = "pay"
    elif step == "welcome_ref":
        await query.edit_message_text(REF_TEXT, reply_markup=REF_MENU)
        context.user_data["welcome_step"] = "ref"
    elif step == "welcome_cost":
        await query.edit_message_text(COST_TEXT, reply_markup=COST_MENU)
        context.user_data["welcome_step"] = "cost"
    else:
        await query.edit_message_text(WELCOME_TEXT, reply_markup=WELCOME_MENU)
        context.user_data["welcome_step"] = "hello"
